apiVersion: v1
kind: Service
metadata:
  name: gravity-operator
  labels:
    app.kubernetes.io/name: gravity-operator
    helm.sh/chart: gravity-operator
    app.kubernetes.io/instance: gravity-operator
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: gravity-operator
    app.kubernetes.io/instance: gravity-operator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gravity-operator
  labels:
    app.kubernetes.io/name: gravity-operator
    helm.sh/chart: gravity-operator
    app.kubernetes.io/instance: gravity-operator
    app.kubernetes.io/managed-by: Tiller
spec:
  minReadySeconds: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: gravity-operator
      app.kubernetes.io/instance: gravity-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gravity-operator
        app.kubernetes.io/instance: gravity-operator
    spec:
      serviceAccountName: gravity-operator
      restartPolicy: Always
      containers:
        - name: operator
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_SERVICE_URI
              value: http://gravity-operator:80
          image: "moiot/gravity-operator:v0.3.0"
          command: ["/gravity-operator"]
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
